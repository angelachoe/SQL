#In this analysis, I explore a customer and order dataset with multiple tables. 

#1. How many orders where made in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> "Order ID";

#2. How many of the orders placed in January were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> "Order ID"
AND product= "iPhone";

#3. Select the customer account numbers for all the orders places in February?
SELECT distinct acctnum 
FROM BIT_DB.FebSales Feb
    INNER JOIN BIT_DB.customers cust
    ON Feb.orderid= cust.order_id
WHERE length(orderID) = 6
AND orderID <> "Order ID";

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT product, MIN(price)
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price ASC;

#5. What is the total revenue for each product sold in January?
SELECT product, ROUND(SUM(quantity)*price,2) AS total_revenue 
FROM BIT_DB.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, location, SUM(Quantity), SUM(Quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location= "548 Lincoln St, Seattle, WA 98101"
GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct cust.acctnum), AVG(quantity*price) AS avg_total
FROM BIT_DB.FebSales feb
    JOIN BIT_DB.customers cust
    ON feb.orderid = cust.order_id
WHERE feb.Quantity >2
AND length(orderid) = 6
AND orderid <> "Order ID";

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like "%Los Angeles%" 
GROUP BY product
